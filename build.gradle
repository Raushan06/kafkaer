plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'co.navdeep'
version '1.6.0'
archivesBaseName = "kafkaer"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven{ url "https://packages.confluent.io/maven/"}
}

dependencies {
    implementation "org.apache.kafka:kafka-clients:2.1.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.0-rc1"
    implementation "org.apache.commons:commons-text:1.10.0"
    implementation "commons-io:commons-io:2.11.0"
    implementation "org.apache.commons:commons-configuration2:2.8.0"
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation "args4j:args4j:2.33"
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "io.confluent:kafka-schema-registry-client:5.5.9"

    compileOnly "org.projectlombok:lombok:1.18.20"
    annotationProcessor "org.projectlombok:lombok:1.18.20"

    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:3.4.0"
}

task execJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'kafkaer',
                'Implementation-Version': version,
                'Main-Class': 'co.navdeep.kafkaer.App'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Implementation-Title': 'kafkaer',
                'Implementation-Version': version,
                'Main-Class': 'co.navdeep.kafkaer.App'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
